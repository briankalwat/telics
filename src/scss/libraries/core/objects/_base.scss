@-webkit-keyframes sk-rotateplane {
  0% { -webkit-transform: perspective(120px) }
  50% { -webkit-transform: perspective(120px) rotateY(180deg) }
  100% { -webkit-transform: perspective(120px) rotateY(180deg)  rotateX(180deg) }
}

@keyframes sk-rotateplane {
  0% { 
    transform: perspective(120px) rotateX(0deg) rotateY(0deg);
    -webkit-transform: perspective(120px) rotateX(0deg) rotateY(0deg) 
  } 50% { 
    transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg);
    -webkit-transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg) 
  } 100% { 
    transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);
    -webkit-transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);
  }
}

$loader-size: 80px;

html {
    font-size: 100%;
    text-rendering: optimizeLegibility !important;
    -webkit-font-smoothing: antialiased !important;
    background-color: $dark-color;

    &.loading {
        overflow: hidden;
        background-color: $primary-color;
        
        &:after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: $loader-size;
            height: $loader-size;
            background-color: darken($primary-color, 20);
            margin-top: -$loader-size/2;
            margin-left: -$loader-size/2;

            -webkit-animation: sk-rotateplane 1s infinite ease-in-out;
            animation: sk-rotateplane 1s infinite ease-in-out;
        }
    }

    &.modal-open {
        overflow: hidden;
    }
}




// Used to make sure no accidental wide margin/img breaks bounds
body {
  overflow-x: hidden;
  color: $dark-color;
  // There's a small bug in webkit that requires a CSS3 property to be set on an element.
  // Read more about it at http://bit.ly/NEdoDq
}




*::selection {
  background: lighten($primary-color, 30); /* WebKit/Blink Browsers */
}
*::-moz-selection {
  background: lighten($primary-color, 30); /* Gecko Browsers */
}




/* ============================================================

    $SHELL

============================================================ */

.shell {
    position: relative;
    max-width: $max-width;
    margin: 0 auto;
    padding: $base-spacing-unit*1.5 $base-spacing-unit*1.5 $base-spacing-unit;

    @include media-query(desk) {
        padding: $base-spacing-unit*1.25 $base-spacing-unit $base-spacing-unit*.75;
    }

    @include media-query(portable) {
        padding: $base-spacing-unit $base-spacing-unit/2 $base-spacing-unit/2;
    }

    @include media-query(handheld) {
        padding: $base-spacing-unit $base-spacing-unit/3 $base-spacing-unit/2;
    }
}




/* ============================================================

    $HORIZONTAL RULES

============================================================ */

hr {
    border: 0px solid transparent;
    border-top: $border-size*2 solid lighten($medium-color, 40);
    margin-bottom: $base-spacing-unit;

    .background-dark & {
        border-color: darken($secondary-color, 15);
    }

    .background-medium & {
        border-color: darken($medium-color, 5);
    }

    @include media-query(handheld) {
        margin-bottom: $base-spacing-unit/2;
    }
}




/* ============================================================

    $DISPLAY/FLOAT UTILITIES

============================================================ */

@include namespace(inline) {
    display: inline-block;
    * {
        display: inline-block;
    }
}

@include namespace(block) {
    display: block;
    * {
        display: block;
    }
}

@include namespace(float--left) {
    float: left !important;
}

@include namespace(float--right) {
    float: right !important;
}

@include namespace(float--none) {
    float: none !important;
}




/* ============================================================

    $ALIGNMENT UTILITIES

============================================================ */

@include namespace(centered) {
    text-align: center !important; 

    * { 
        text-align: center; 
    }

    p {
        display: inline-block;
    }
}

@include namespace(left) {
    text-align: left !important; 

    * { 
        text-align: left; 
    }
}

@include namespace(right) {
    text-align: right !important; 

    * { 
        text-align: right; 
    }

    p {
        display: inline-block;
    }
}

@include namespace(hard) {
    padding: 0px !important;
}

@include namespace(flush) {
    margin: 0px !important;
}


/* ============================================================

    $SHAPE UTILITIES

============================================================ */